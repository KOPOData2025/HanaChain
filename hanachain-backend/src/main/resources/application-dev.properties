# Development Environment Configuration

# Database Configuration (Oracle 23c Free for development - orcl23 container)
spring.datasource.url=${DEV_DB_URL}
spring.datasource.username=${DEV_DB_USERNAME}
spring.datasource.password=${DEV_DB_PASSWORD}
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# JPA Configuration for Development (update로 변경하여 테이블 보존)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect

# Data initialization (data.sql 실행을 위한 설정)
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# Flyway Configuration for Development (JPA로 초기 생성 후 Flyway 비활성화)
spring.flyway.enabled=false

# HikariCP Configuration for Oracle
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000

# JWT Configuration (Development - 개발 편의성을 위한 긴 만료 시간)
app.jwt.secret=${JWT_SECRET_DEV}
app.jwt.expiration=${JWT_EXPIRATION_DEV}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION_DEV}

# Mail Configuration (Development - Console mode for testing)
# Gmail SMTP configuration - requires valid app password
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000

# Alternative: Use fake SMTP for testing (uncomment to use)
# spring.mail.host=localhost
# spring.mail.port=1025
# spring.mail.username=
# spring.mail.password=
# spring.mail.properties.mail.smtp.auth=false
# spring.mail.properties.mail.smtp.starttls.enable=false

# Email Configuration
app.mail.from=${MAIL_FROM}
app.mail.verification.expiration=${MAIL_VERIFICATION_EXPIRATION}

# Security Configuration
# Allow both localhost and hanachain.com domains for all ports
app.security.cors.allowed-origins=${CORS_ALLOWED_ORIGINS_DEV}

# Health Check Configuration (개발 환경)
management.health.mail.enabled=false

# Logging Configuration for Development
logging.level.com.hanachain=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.web.access=TRACE
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# Blockchain Configuration for Development
blockchain.network.rpc-url=${SEPOLIA_URL:https://sepolia.infura.io/v3/6ff3d9b6a36a469dae664ae64326fa5b}
blockchain.network.chain-id=11155111
blockchain.network.name=sepolia

# Smart Contract Addresses (Sepolia testnet)
# Updated to match blockchain-config.properties (deployed 2025-09-28)
blockchain.contracts.usdc-address=0xd5B3A7b236a2eaCba8DC8Aeef7966Ba6d9197d0f
blockchain.contracts.campaign-address=0xC4e6726Cd8083eD88b0e521e9a8EF3a8701FBB32

# USDC Token Configuration (for batch processing)
blockchain.usdc.contract.address=${blockchain.contracts.usdc-address}
blockchain.campaign.contract.address=${blockchain.contracts.campaign-address}

# Wallet Configuration
blockchain.wallet.private-key=${BLOCKCHAIN_PRIVATE_KEY:}
blockchain.wallet.keystore-path=${KEYSTORE_PATH:./keystore}
blockchain.wallet.keystore-password=${KEYSTORE_PASSWORD:}

# Gas Configuration
blockchain.gas.price-gwei=20
blockchain.gas.limit=800000
blockchain.gas.price.max-gwei=50

# Web3j Configuration
web3j.client-address=${blockchain.network.rpc-url}
web3j.admin-client=true
web3j.net-client=true
web3j.web3j-client=true

# Web3j Timeout Configuration (milliseconds)
blockchain.timeout.connection=120000
blockchain.timeout.read=300000
blockchain.timeout.write=180000

# Spring Batch Configuration for Donation Token Transfer
batch.donation-transfer.chunk-size=100
batch.donation-transfer.retry-limit=3
batch.donation-transfer.skip-limit=1000
