# Application Configuration
spring.application.name=hanachain-backend
spring.profiles.active=dev

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Database Initialization (completely disabled - using Flyway instead)
spring.sql.init.mode=never
spring.datasource.initialization-mode=never
spring.sql.init.schema-locations=
spring.sql.init.data-locations=
spring.sql.init.continue-on-error=false
spring.sql.init.separator=;
spring.datasource.schema=
spring.datasource.data=

# Flyway Configuration (enabled for production-ready migration)
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=false

# HikariCP Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000

# Logging Configuration
logging.level.com.hanachain=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Log File Configuration
logging.file.name=logs/application.log
logging.file.path=logs
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB

# Log Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized

# Swagger Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Static Resource Configuration
# Disable Spring Boot's default static resource handling (/** pattern)
# This prevents ResourceHttpRequestHandler from intercepting controller requests
spring.web.resources.add-mappings=false

# Blockchain Configuration - Web3j
# Sepolia testnet RPC endpoint (environment variable recommended for production)
blockchain.network.rpc-url=${SEPOLIA_URL:https://sepolia.infura.io/v3/6ff3d9b6a36a469dae664ae64326fa5b}
blockchain.network.chain-id=11155111
blockchain.network.name=sepolia

# Smart Contract Addresses (Sepolia testnet) - 실제 배포된 주소
# Updated to match blockchain-config.properties (deployed 2025-09-28)
blockchain.contracts.usdc-address=0xd5B3A7b236a2eaCba8DC8Aeef7966Ba6d9197d0f
blockchain.contracts.campaign-address=0xC4e6726Cd8083eD88b0e521e9a8EF3a8701FBB32

# Wallet Configuration (should be set via environment variables)
blockchain.wallet.private-key=${BLOCKCHAIN_PRIVATE_KEY:}
blockchain.wallet.keystore-path=${KEYSTORE_PATH:./keystore}
blockchain.wallet.keystore-password=${KEYSTORE_PASSWORD:}

# Wallet Master Password for System-Wide Encryption (Batch Operations)
wallet.master.password=${WALLET_MASTER_PASSWORD:hanachain-secure-master-password-2025}

# Gas Configuration
blockchain.gas.price-gwei=20
blockchain.gas.limit=800000

# Web3j Configuration
web3j.client-address=${blockchain.network.rpc-url}
web3j.admin-client=true
web3j.net-client=true
web3j.web3j-client=true

# Web3j Timeout Configuration (milliseconds) - 더 관대한 타임아웃 설정
blockchain.timeout.connection=120000
blockchain.timeout.read=300000
blockchain.timeout.write=180000

# Spring Batch Configuration for Donation Token Transfer
batch.donation-transfer.chunk-size=100
batch.donation-transfer.retry-limit=3
batch.donation-transfer.skip-limit=1000

# USDC Token Configuration (for batch processing)
blockchain.usdc.contract.address=${blockchain.contracts.usdc-address}
blockchain.campaign.contract.address=${blockchain.contracts.campaign-address}
blockchain.gas.price.max-gwei=50
blockchain.gas.limit=100000

# Platform Wallet Configuration (for USDC faucet/charging)
blockchain.platform.wallet.address=${PLATFORM_WALLET_ADDRESS:0xa757A82EDC4E1fA41E2bE0e1E0E4E847E6dd59F3}
blockchain.platform.wallet.private-key=${PLATFORM_WALLET_PRIVATE_KEY:99eb199e5870cd7cd673e54a49b7018d31f745fd8941d8f25364c169f8603793}

# FDS API 서버 URL (기본값: http://localhost:8000)
fds.api.url=http://localhost:8000
# FDS API 타임아웃 (밀리초, 기본값: 3000ms = 3초)
fds.api.timeout=3000

# PortOne Payment Gateway Configuration
# PortOne API Secret for V2 REST API (should be set via environment variable)
portone.api.secret=${PORTONE_API_SECRET:your-portone-api-secret-here}
# PortOne Webhook Secret for signature verification
portone.webhook.secret=${PORTONE_WEBHOOK_SECRET:your-webhook-secret-here}