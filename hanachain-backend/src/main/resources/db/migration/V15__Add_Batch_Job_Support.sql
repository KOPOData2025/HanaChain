-- V15: Spring Batch 지원 및 캠페인 배치 작업 추가

-- Spring Batch 메타데이터 테이블 생성
-- Spring Batch가 자동으로 생성하지만 Oracle에 맞게 명시적으로 생성

CREATE TABLE BATCH_JOB_INSTANCE (
    JOB_INSTANCE_ID NUMBER(19,0) NOT NULL PRIMARY KEY,
    VERSION NUMBER(19,0),
    JOB_NAME VARCHAR2(100) NOT NULL,
    JOB_KEY VARCHAR2(32) NOT NULL,
    CONSTRAINT JOB_INST_UN UNIQUE (JOB_NAME, JOB_KEY)
);

CREATE TABLE BATCH_JOB_EXECUTION (
    JOB_EXECUTION_ID NUMBER(19,0) NOT NULL PRIMARY KEY,
    VERSION NUMBER(19,0),
    JOB_INSTANCE_ID NUMBER(19,0) NOT NULL,
    CREATE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP DEFAULT NULL,
    END_TIME TIMESTAMP DEFAULT NULL,
    STATUS VARCHAR2(10),
    EXIT_CODE VARCHAR2(2500),
    EXIT_MESSAGE VARCHAR2(2500),
    LAST_UPDATED TIMESTAMP,
    CONSTRAINT JOB_INST_EXEC_FK FOREIGN KEY (JOB_INSTANCE_ID) REFERENCES BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS (
    JOB_EXECUTION_ID NUMBER(19,0) NOT NULL,
    PARAMETER_NAME VARCHAR2(100) NOT NULL,
    PARAMETER_TYPE VARCHAR2(100) NOT NULL,
    PARAMETER_VALUE VARCHAR2(2500),
    IDENTIFYING CHAR(1) NOT NULL,
    CONSTRAINT JOB_EXEC_PARAMS_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION (
    STEP_EXECUTION_ID NUMBER(19,0) NOT NULL PRIMARY KEY,
    VERSION NUMBER(19,0) NOT NULL,
    STEP_NAME VARCHAR2(100) NOT NULL,
    JOB_EXECUTION_ID NUMBER(19,0) NOT NULL,
    CREATE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP DEFAULT NULL,
    END_TIME TIMESTAMP DEFAULT NULL,
    STATUS VARCHAR2(10),
    COMMIT_COUNT NUMBER(19,0),
    READ_COUNT NUMBER(19,0),
    FILTER_COUNT NUMBER(19,0),
    WRITE_COUNT NUMBER(19,0),
    READ_SKIP_COUNT NUMBER(19,0),
    WRITE_SKIP_COUNT NUMBER(19,0),
    PROCESS_SKIP_COUNT NUMBER(19,0),
    ROLLBACK_COUNT NUMBER(19,0),
    EXIT_CODE VARCHAR2(2500),
    EXIT_MESSAGE VARCHAR2(2500),
    LAST_UPDATED TIMESTAMP,
    CONSTRAINT JOB_EXEC_STEP_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT (
    STEP_EXECUTION_ID NUMBER(19,0) NOT NULL PRIMARY KEY,
    SHORT_CONTEXT VARCHAR2(2500) NOT NULL,
    SERIALIZED_CONTEXT CLOB,
    CONSTRAINT STEP_EXEC_CTX_FK FOREIGN KEY (STEP_EXECUTION_ID) REFERENCES BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
    JOB_EXECUTION_ID NUMBER(19,0) NOT NULL PRIMARY KEY,
    SHORT_CONTEXT VARCHAR2(2500) NOT NULL,
    SERIALIZED_CONTEXT CLOB,
    CONSTRAINT JOB_EXEC_CTX_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

-- Spring Batch 시퀀스 생성
CREATE SEQUENCE BATCH_JOB_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

-- 캠페인 테이블에 배치 작업 관련 컬럼 추가
ALTER TABLE campaigns ADD batch_job_execution_id NUMBER(19,0);
ALTER TABLE campaigns ADD batch_job_status VARCHAR2(20);
ALTER TABLE campaigns ADD batch_started_at TIMESTAMP;
ALTER TABLE campaigns ADD batch_completed_at TIMESTAMP;
ALTER TABLE campaigns ADD total_donations_processed NUMBER(10,0) DEFAULT 0;
ALTER TABLE campaigns ADD successful_transfers NUMBER(10,0) DEFAULT 0;
ALTER TABLE campaigns ADD failed_transfers NUMBER(10,0) DEFAULT 0;

-- 배치 작업 상태 체크 제약조건 추가
ALTER TABLE campaigns ADD CONSTRAINT chk_batch_status CHECK (
    batch_job_status IS NULL OR
    batch_job_status IN ('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'STOPPED')
);

-- 인덱스 추가
CREATE INDEX idx_batch_job_exec_campaign ON campaigns(batch_job_execution_id);
CREATE INDEX idx_batch_job_status ON campaigns(batch_job_status);
CREATE INDEX idx_batch_job_inst_name ON BATCH_JOB_INSTANCE(JOB_NAME);
CREATE INDEX idx_batch_job_exec_status ON BATCH_JOB_EXECUTION(STATUS);
CREATE INDEX idx_batch_step_exec_job ON BATCH_STEP_EXECUTION(JOB_EXECUTION_ID);

-- 기부 테이블에 배치 처리 관련 인덱스 추가 (성능 최적화)
CREATE INDEX idx_donation_batch_processing ON donations(payment_status, blockchain_recorded)
WHERE payment_status = 'COMPLETED' AND blockchain_recorded = 0;

COMMENT ON COLUMN campaigns.batch_job_execution_id IS '마지막 실행된 배치 작업 ID';
COMMENT ON COLUMN campaigns.batch_job_status IS '배치 작업 상태 (PENDING, RUNNING, COMPLETED, FAILED, STOPPED)';
COMMENT ON COLUMN campaigns.batch_started_at IS '배치 작업 시작 시간';
COMMENT ON COLUMN campaigns.batch_completed_at IS '배치 작업 완료 시간';
COMMENT ON COLUMN campaigns.total_donations_processed IS '처리된 총 기부 건수';
COMMENT ON COLUMN campaigns.successful_transfers IS '성공한 토큰 전송 건수';
COMMENT ON COLUMN campaigns.failed_transfers IS '실패한 토큰 전송 건수';
